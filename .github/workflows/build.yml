name: Build EXE

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
      
    - name: Check Icon File
      run: |
        if (!(Test-Path "app.ico")) {
          Write-Error "app.ico not found!"
          exit 1
        }
      shell: pwsh
      
    - name: Update Version Info
      run: |
        $version = "${{ github.event.inputs.version }}"
        $version_parts = $version.Split('.')
        $content = Get-Content file_version_info.txt -Raw
        $content = $content -replace "filevers=\([^)]+\)", "filevers=($version_parts[0], $version_parts[1], $version_parts[2], 0)"
        $content = $content -replace "prodvers=\([^)]+\)", "prodvers=($version_parts[0], $version_parts[1], $version_parts[2], 0)"
        $content = $content -replace "FileVersion', u'[^']+", "FileVersion', u'$version"
        $content = $content -replace "ProductVersion', u'[^']+", "ProductVersion', u'$version"
        $content | Set-Content file_version_info.txt -Force
      shell: pwsh
      
    - name: Build EXE
      run: |
        pyinstaller --clean live.spec
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: Release v${{ github.event.inputs.version }}
        body: |
          版本 ${{ github.event.inputs.version }} 发布
          
          ### 更新内容
          - 版本更新
          - 文件名修改为 live.exe
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/live.exe
        asset_name: live.exe
        asset_content_type: application/octet-stream 